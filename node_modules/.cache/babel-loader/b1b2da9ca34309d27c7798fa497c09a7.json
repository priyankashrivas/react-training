{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/redux/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.createStream(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Create a \"));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var error = {};\n\n  if (!formValues.title) {\n    error.title = \"you must enter the title\";\n  }\n\n  if (!formValues.title) {\n    error.description = \"you must enter the description\";\n  }\n\n  return error;\n};\n\nvar formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream: createStream\n})(formWrapped);","map":{"version":3,"sources":["/home/priyanka/redux/streams/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","onSubmit","formValues","props","Component","validate","error","title","description","formWrapped","reduxForm","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,Y;;;;;;;;;;;;;;;;;;UAEFC,Q,GAAW,UAAAC,UAAU,EAAG;AACpB,YAAKC,KAAL,CAAWL,YAAX,CAAwBI,UAAxB;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAKH;;;;EAZsBN,KAAK,CAACQ,S;;AAejC,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAACH,UAAD,EAAgB;AAC5B,MAAMI,KAAK,GAAE,EAAb;;AACA,MAAG,CAACJ,UAAU,CAACK,KAAf,EAAqB;AACjBD,IAAAA,KAAK,CAACC,KAAN,GAAa,0BAAb;AACH;;AACD,MAAG,CAACL,UAAU,CAACK,KAAf,EAAqB;AACjBD,IAAAA,KAAK,CAACE,WAAN,GAAkB,gCAAlB;AACH;;AACD,SAAOF,KAAP;AACH,CATD;;AAWA,IAAMG,WAAW,GAAGC,SAAS,CAAC;AAC1BC,EAAAA,IAAI,EAAE,cADoB;AAE1BN,EAAAA,QAAQ,EAACA;AAFiB,CAAD,CAAT,CAGjBL,YAHiB,CAApB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAM;AAACC,EAAAA,YAAY,EAAZA;AAAD,CAAN,CAAP,CAA6BW,WAA7B,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions'\nimport StreamForm from './StreamForm';\n\n\nclass StreamCreate extends React.Component {\n    \n    onSubmit = formValues =>{\n        this.props.createStream(formValues);\n    };\n    \n    render() {\n        return (\n            <div>\n                <h3>Create a </h3>\n            </div>\n        );\n    }  \n}\n\nconst validate =(formValues) => {\n    const error ={};\n    if(!formValues.title){\n        error.title= \"you must enter the title\";\n    }\n    if(!formValues.title){\n        error.description=\"you must enter the description\";\n    }\n    return error;\n}\n\nconst formWrapped = reduxForm({\n    form: 'streamCreate',\n    validate:validate\n})(StreamCreate);\n\nexport default connect(null,{createStream})(formWrapped);"]},"metadata":{},"sourceType":"module"}