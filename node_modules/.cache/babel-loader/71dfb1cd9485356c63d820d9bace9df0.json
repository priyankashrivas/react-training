{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/redux/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\nimport { Link } from 'react-router-dom';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    //fetching the records    \n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    } //conditionally showing edit and delete\n\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"Delete\"));\n      }\n    } //render each record\n\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, _this.renderAdmin(stream), React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, stream.description)));\n      });\n    } //linking to stream creation\n\n  }, {\n    key: \"renderCreate\",\n    value: function renderCreate() {\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          style: {\n            textAligned: textAligned\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/new\",\n          classname: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"create Stream\"));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/priyanka/redux/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","props","stream","userId","currentUserId","streams","map","id","renderAdmin","title","description","isSignedIn","textAligned","renderList","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,U;;;;;;;;;;;;;AACF;wCACoB;AAEhB,WAAKC,KAAL,CAAWH,YAAX;AACH,K,CAED;;;;gCACYI,M,EAAO;AACf,UAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAhC,EAA8C;AAC1C,eACI;AAAK,UAAA,SAAS,EAAE,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAE,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,UAAA,SAAS,EAAE,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADJ;AAMH;AACJ,K,CACD;;;;iCACY;AAAA;;AACP,aAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuB,UAAAJ,MAAM,EAAI;AACrC,eACI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAuB,UAAA,GAAG,EAAGA,MAAM,CAACK,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAI,CAACC,WAAL,CAAiBN,MAAjB,CADL,EAEI;AAAG,UAAA,SAAS,EAAE,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAK,UAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,MAAM,CAACO,KADZ,EAEI;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKP,MAAM,CAACQ,WADZ,CAFJ,CAHJ,CADJ;AAYH,OAbO,CAAP;AAcJ,K,CACD;;;;mCACc;AACV,UAAG,KAAKT,KAAL,CAAWU,UAAd,EAAyB;AACrB,eACI;AAAK,UAAA,KAAK,EAAG;AAACC,YAAAA,WAAW,EAAXA;AAAD,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,cAAV;AAAyB,UAAA,SAAS,EAAE,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAOH;AAEJ;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,UAAL,EADL,CAFJ,CADJ;AAQH;;;;EA1DoBjB,KAAK,CAACkB,S;;AA8D/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAE7B,SAAO;AACHX,IAAAA,OAAO,EAAEY,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACX,OAApB,CADN;AAEHD,IAAAA,aAAa,EAAGY,KAAK,CAACG,IAAN,CAAWhB,MAFxB;AAGHQ,IAAAA,UAAU,EAAGK,KAAK,CAACG,IAAN,CAAWR;AAHrB,GAAP;AAMH,CARD;;AAUA,eAAed,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,YAAY,EAAZA;AAAD,CAAlB,CAAP,CAAyCE,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStreams} from '../../actions';\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n    //fetching the records    \n    componentDidMount() {\n       \n        this.props.fetchStreams();\n    }\n    \n    //conditionally showing edit and delete\n    renderAdmin(stream){\n        if(stream.userId === this.props.currentUserId){\n            return (\n                <div className ='right floated content'>\n                    <button className ='ui button primary'>Edit</button>\n                    <button className ='ui button negative'>Delete</button>\n                </div>\n            );\n        }\n    }\n    //render each record\n    renderList(){\n         return this.props.streams.map(stream => {\n            return (\n                <div className ='item' key ={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className =\"large middle aligned icon camera\"/>\n                    <div className =\"content\">\n                        {stream.title}\n                        <div className =\"description\">\n                            {stream.description}\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n    }\n    //linking to stream creation\n    renderCreate(){\n        if(this.props.isSignedIn){\n            return(\n                <div style ={{textAligned}}>\n                    <Link to =\"/streams/new\" classname =\"ui button primary\">\n                        create Stream\n                    </Link>\n                </div>\n            );\n        }\n\n    }\n\n    render() {\n        return(\n            <div> \n                <h2>Streams</h2>\n                <div className =\"ui celled list\">\n                    {this.renderList()}\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    \n    return { \n        streams :Object.values(state.streams),\n        currentUserId : state.auth.userId,\n        isSignedIn : state.auth.isSignedIn\n    \n    }; \n};\n\nexport default connect(mapStateToProps ,{fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}