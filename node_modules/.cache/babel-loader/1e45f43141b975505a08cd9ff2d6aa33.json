{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/redux/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/redux/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/redux/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/redux/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/redux/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/redux/client/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GoogleAuth, _React$Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onAuthChange = function (isSignedIn) {\n      if (isSignedIn) {\n        _this.props.signIn(_this.auth.currentUser.get().getId);\n      } else {\n        _this.props.signOut();\n      }\n    };\n\n    _this.onSignInClick = function () {\n      _this.auth.signIn();\n    };\n\n    _this.onSignOutClick = function () {\n      _this.auth.signOut();\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentDidMount\",\n    //component render after this library load\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // wiring up google api library\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '531321390020-bn695k4i0628qbhdoeqk66k67as21ur1.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          //we get current authentication status\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.onAuthChange(_this2.auth.isSignedIn.get());\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    }\n  }, {\n    key: \"renderAuthButton\",\n    //displaying sign in or sign out buttons\n    value: function renderAuthButton() {\n      if (this.props.isSignedIn === null) {\n        return null;\n      } else if (this.props.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }), \"Sign out\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: this.onSignInClick,\n          className: \"ui red google button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \" google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), \"Sign In with google\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n}; //connecting with action creator\n\n\nexport default connect(mapStateToProps, {\n  signIn: signIn,\n  signOut: signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/priyanka/redux/client/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,MAAR,EAAeC,OAAf,QAA6B,YAA7B;;IAEMC,U;;;;;;;;;;;;;;;;;;UAsBFC,Y,GAAe,UAAAC,UAAU,EAAI;AACzB,UAAGA,UAAH,EAAe;AACX,cAAKC,KAAL,CAAWL,MAAX,CAAkB,MAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA9C;AACH,OAFD,MAEO;AACH,cAAKJ,KAAL,CAAWJ,OAAX;AACH;AAEJ,K;;UAGDS,a,GAAgB,YAAM;AAClB,YAAKJ,IAAL,CAAUN,MAAV;AACH,K;;UAEDW,c,GAAiB,YAAM;AACnB,YAAKL,IAAL,CAAUL,OAAV;AACH,K;;;;;;;AAnCD;wCACoB;AAAA;;AAChB;AACAW,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACnCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACCC,IADD,CACM;AACFC,UAAAA,QAAQ,EAAE,0EADR;AAEFC,UAAAA,KAAK,EAAE;AAFL,SADN,EAKCC,IALD,CAKM,YAAM;AACR;AACA,UAAA,MAAI,CAACb,IAAL,GAAYM,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AAEA,UAAA,MAAI,CAAClB,YAAL,CAAkB,MAAI,CAACG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;;AACA,UAAA,MAAI,CAACF,IAAL,CAAUF,UAAV,CAAqBkB,MAArB,CAA4B,MAAI,CAACnB,YAAjC;AACH,SAXD;AAYH,OAbD;AAcH;;;AAoBD;uCACmB;AAEf,UAAI,KAAKE,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAChC,eAAO,IAAP;AACH,OAFD,MAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAC9B,eACI;AAAQ,UAAA,OAAO,EAAG,KAAKO,cAAvB;AAAuC,UAAA,SAAS,EAAG,sBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAE,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,aADJ;AAMH,OAPM,MAOA;AACH,eACI;AAAQ,UAAA,OAAO,EAAG,KAAKD,aAAvB;AAAsC,UAAA,SAAS,EAAE,sBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAE,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,wBADJ;AAMH;AAGJ;;;6BACQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKa,gBAAL,EADL,CADJ;AAKH;;;;EAtEoBzB,KAAK,CAAC0B,S;;AAyE/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAU;AAC9B,SAAO;AAACtB,IAAAA,UAAU,EAAGsB,KAAK,CAACpB,IAAN,CAAWF;AAAzB,GAAP;AAGH,CAJD,C,CAMA;;;AACA,eAAeL,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA,MAAM,EAANA,MAAD;AAASC,EAAAA,OAAO,EAAPA;AAAT,CAAlB,CAAP,CAA4CC,UAA5C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {signIn,signOut} from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n\n    //component render after this library load\n    componentDidMount() {\n        // wiring up google api library\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client\n            .init({\n                clientId: '531321390020-bn695k4i0628qbhdoeqk66k67as21ur1.apps.googleusercontent.com',\n                scope: 'email'\n            })\n            .then(() => {\n                //we get current authentication status\n                this.auth = window.gapi.auth2.getAuthInstance();\n\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = isSignedIn => {\n        if(isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId);\n        } else {\n            this.props.signOut();\n        }\n       \n    };\n    \n    //on demand sign in or sign out\n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    };\n\n    //displaying sign in or sign out buttons\n    renderAuthButton() {\n\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <button onClick ={this.onSignOutClick} className = 'ui red google button'>\n                    <i className =\"google icon\" />\n                    Sign out\n                </button>\n            );\n        } else {\n            return (\n                <button onClick ={this.onSignInClick} className =\"ui red google button\">\n                    <i className =' google icon'/>\n                    Sign In with google\n                </button>\n            );\n        }\n\n\n    }\n    render() {\n\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {isSignedIn : state.auth.isSignedIn };\n\n\n};\n\n//connecting with action creator\nexport default connect(mapStateToProps ,{signIn ,signOut})(GoogleAuth);"]},"metadata":{},"sourceType":"module"}