{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/redux/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nvar StreamDelete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamDelete, _React$Component);\n\n  function StreamDelete() {\n    _classCallCheck(this, StreamDelete);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamDelete).apply(this, arguments));\n  }\n\n  _createClass(StreamDelete, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"renderAction\",\n    value: function renderAction() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"ui negative button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        className: \"ui button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Cancel\"));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      if (!this.props.stream) {\n        return 'Are you sure you want to delete this stream...?';\n      }\n\n      return \"Are you sure you want to delete this stream...with this title:\".concat(this.props.stream.title);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.streams) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {}\n\n      return React.createElement(Modal, {\n        title: \"Delete Stream\",\n        content: this.renderContent(),\n        action: this.renderAction(),\n        onDismiss: function onDismiss() {\n          return history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StreamDelete;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/home/priyanka/redux/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","history","connect","fetchStream","StreamDelete","props","match","params","id","stream","title","streams","renderContent","renderAction","push","Component","mapStateToProps","state","ownProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,eAA1B;;IAGMC,Y;;;;;;;;;;;;;wCACiB;AACf,WAAKC,KAAL,CAAWF,WAAX,CAAuB,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;mCAEa;AACV,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAE,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,SAAS,EAAE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ;AAMH;;;oCACc;AACX,UAAG,CAAC,KAAKH,KAAL,CAAWI,MAAf,EAAsB;AAClB,eAAO,iDAAP;AACH;;AACD,qFAAwE,KAAKJ,KAAL,CAAWI,MAAX,CAAkBC,KAA1F;AACH;;;6BAEO;AACJ,UAAG,CAAC,KAAKL,KAAL,CAAWM,OAAf,EAAuB;AACnB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH,OAFD,MAGI,CAAE;;AACN,aACK,oBAAC,KAAD;AACG,QAAA,KAAK,EAAE,eADV;AAEG,QAAA,OAAO,EAAG,KAAKC,aAAL,EAFb;AAGG,QAAA,MAAM,EAAG,KAAKC,YAAL,EAHZ;AAIG,QAAA,SAAS,EAAG;AAAA,iBAAMZ,OAAO,CAACa,IAAR,CAAa,GAAb,CAAN;AAAA,SAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL;AAQH;;;;EAjCsBf,KAAK,CAACgB,S;;AAoCjC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAET,IAAAA,MAAM,EAAGQ,KAAK,CAACN,OAAN,CAAcO,QAAQ,CAACZ,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACc,eAAD,EAAiB;AAACb,EAAAA,WAAW,EAAXA;AAAD,CAAjB,CAAP,CAAuCC,YAAvC,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport {connect} from 'react-redux';\nimport {fetchStream} from '../../actions';\n\n\nclass StreamDelete extends React.Component {\n    componentDidMount(){\n        this.props.fetchStream(this.props.match.params.id);\n    }\n    \n    renderAction(){\n        return (\n            <React.Fragment>\n                <button className =\"ui negative button\">Delete</button>\n                <button className =\"ui button\">Cancel</button>\n            </React.Fragment>      \n        );\n    }\n    renderContent(){\n        if(!this.props.stream){\n            return 'Are you sure you want to delete this stream...?'\n        }\n        return `Are you sure you want to delete this stream...with this title:${this.props.stream.title}`\n    }\n    \n    render(){\n        if(!this.props.streams){\n            return <div>Loading...</div>;\n        }\n        else{}\n        return (\n             <Modal \n                title =\"Delete Stream\"\n                content ={this.renderContent()}\n                action ={this.renderAction()}\n                onDismiss ={() => history.push('/')}\n            />   \n        );\n    }\n}\n\nconst mapStateToProps = (state ,ownProps) => {\n    return { stream : state.streams[ownProps.match.params.id]}\n};\n\nexport default connect(mapStateToProps,{fetchStream})(StreamDelete);"]},"metadata":{},"sourceType":"module"}