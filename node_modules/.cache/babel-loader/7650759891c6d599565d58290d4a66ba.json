{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/redux/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    //fetching the records    \n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    } //render each record\n\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, stream.description)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/priyanka/redux/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","streams","map","stream","id","title","description","renderList","Component","mapStateToProps","state","Object","values","currentUserId","auth","userId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;;IAEMC,U;;;;;;;;;;;;;AACF;wCACoB;AAEhB,WAAKC,KAAL,CAAWF,YAAX;AACH,K,CAED;;;;iCACY;AACP,aAAO,KAAKE,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM,EAAI;AACrC,eACI;AAAK,UAAA,SAAS,EAAE,MAAhB;AAAuB,UAAA,GAAG,EAAGA,MAAM,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAE,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,MAAM,CAACE,KADZ,EAEI;AAAK,UAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKF,MAAM,CAACG,WADZ,CAFJ,CAFJ,CADJ;AAWH,OAZO,CAAP;AAaJ;;;6BAGQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,UAAL,EADL,CAFJ,CADJ;AAQH;;;;EAlCoBX,KAAK,CAACY,S;;AAsC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAE7B,SAAO;AACHT,IAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB,CADN;AAEHY,IAAAA,aAAa,EAAGH,KAAK,CAACI,IAAN,CAAWC;AAFxB,GAAP;AAKH,CAPD;;AASA,eAAelB,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA,YAAY,EAAZA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStreams} from '../../actions';\n\nclass StreamList extends React.Component {\n    //fetching the records    \n    componentDidMount() {\n       \n        this.props.fetchStreams();\n    }\n    \n    //render each record\n    renderList(){\n         return this.props.streams.map(stream => {\n            return (\n                <div className ='item' key ={stream.id}>\n                    <i className =\"large middle aligned icon camera\"/>\n                    <div className =\"content\">\n                        {stream.title}\n                        <div className =\"description\">\n                            {stream.description}\n                        </div>\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    \n    render() {\n        return(\n            <div> \n                <h2>Streams</h2>\n                <div className =\"ui celled list\">\n                    {this.renderList()}\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    \n    return { \n        streams :Object.values(state.streams),\n        currentUserId : state.auth.userId\n    \n    }; \n};\n\nexport default connect(mapStateToProps ,{fetchStreams})(StreamList);"]},"metadata":{},"sourceType":"module"}