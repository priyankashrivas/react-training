{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/redux/streams/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    _classCallCheck(this, StreamEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamEdit).apply(this, arguments));\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.frtchStream(this.props.match.prams.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"StreamEdit\");\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component);\n\nvar mapstateToProps = function mapstateToProps(state, ownProps) {\n  //selecting record from state\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapstateToProps)(StreamEdit);","map":{"version":3,"sources":["/home/priyanka/redux/streams/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","props","frtchStream","match","prams","id","Component","mapstateToProps","state","ownProps","stream","streams","params"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA2B,eAA3B;;IAEMC,U;;;;;;;;;;;;;wCAEiB;AACf,WAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,KAAjB,CAAuBC,EAA9C;AACH;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;;;EAVoBR,KAAK,CAACS,S;;AAc/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAmB;AACvC;AACA,SAAO;AAACC,IAAAA,MAAM,EAAGF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACN,KAAT,CAAeS,MAAf,CAAsBP,EAApC;AAAV,GAAP;AACH,CAHD;;AAKA,eAAeP,OAAO,CAACS,eAAD,CAAP,CAAyBP,UAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchStream } from '../../actions'\n\nclass StreamEdit extends React.Component {\n    \n    componentDidMount(){\n        this.props.frtchStream(this.props.match.prams.id);\n    }\n\n    render(){\n        return (\n            <div>StreamEdit</div>\n        );\n    }\n    \n}\n\nconst mapstateToProps = (state ,ownProps)=>{\n    //selecting record from state\n    return {stream : state.streams[ownProps.match.params.id]};\n};\n\nexport default connect(mapstateToProps)(StreamEdit);"]},"metadata":{},"sourceType":"module"}