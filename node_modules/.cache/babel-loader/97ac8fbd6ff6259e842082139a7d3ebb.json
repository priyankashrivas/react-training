{"ast":null,"code":"import _regeneratorRuntime from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, EDIT_STREAM, DELETE_STREAM } from './types'; //action creator \n\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n}; //creating streams through action creator\n\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var _getState$auth, userId, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _getState$auth = getState.auth(), userId = _getState$auth.userId;\n                _context.next = 3;\n                return streams.post('/streams', formValues);\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStreams = function fetchStreams() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return streams.get('/streams');\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_STREAMS,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchStream = function fetchStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return streams.get(\"/streams/\".concat(id));\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: FETCH_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var editStream = function editStream(id, formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return streams.put(\"/streams/\".concat(id), formValues);\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: EDIT_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteStream = function deleteStream(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return streams.get(\"/streams/\".concat(id));\n\n              case 2:\n                dispatch({\n                  type: DELETE_STREAM,\n                  payload: id\n                });\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x6) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/priyanka/redux/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","EDIT_STREAM","DELETE_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","post","response","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream"],"mappings":"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","sourcesContent":["import streams from '../apis/streams';\nimport {SIGN_IN ,\n        SIGN_OUT,\n        CREATE_STREAM,\n        FETCH_STREAMS,\n        FETCH_STREAM,\n        EDIT_STREAM,\n        DELETE_STREAM\n    } from './types';\n\n//action creator \nexport const  signIn = (userId) => {\n    return {\n        type : SIGN_IN,\n        payload : userId\n    };\n};\n\nexport const signOut = () => {\n    return {\n        type : SIGN_OUT\n    };\n\n};\n//creating streams through action creator\nexport const createStream = formValues => async (dispatch ,getState) => {\n    const { userId } =getState.auth();\n    const response = await streams.post('/streams', formValues);\n\n    dispatch ({type: CREATE_STREAM ,payload :response.data});\n};\n\nexport const fetchStreams = ()=> async (dispatch) => {\n    const response = await streams.get('/streams');\n\n    dispatch ({type: FETCH_STREAMS ,payload :response.data});\n};\n\nexport const fetchStream = (id) => async (dispatch) => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch ({type: FETCH_STREAM ,payload :response.data});\n};\n\n\nexport const editStream = (id ,formValues) => async (dispatch) => {\n    const response = await streams.put(`/streams/${id}` , formValues);\n\n    dispatch ({type: EDIT_STREAM ,payload :response.data});\n};\n\nexport const deleteStream = (id) => async (dispatch) => {\n        await streams.get(`/streams/${id}`);\n\n    dispatch ({type: DELETE_STREAM ,payload :id});\n};"]},"metadata":{},"sourceType":"module"}