{"ast":null,"code":"import _classCallCheck from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/priyanka/redux/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/priyanka/redux/streams/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamShow, _React$Component);\n\n  //implementing flv.js\n  function StreamShow(props) {\n    var _this;\n\n    _classCallCheck(this, StreamShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).call(this, props));\n    _this.videoRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.fetchStream(id);\n    }\n  }, {\n    key: \"buildPlayer\",\n    value: function buildPlayer() {\n      if (this.player || !this.props.stream) {\n        return;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Loading....\");\n      }\n\n      var _this$props$stream = this.props.stream,\n          title = _this$props$stream.title,\n          description = _this$props$stream.description;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        },\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, title), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, description));\n    }\n  }]);\n\n  return StreamShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/priyanka/redux/streams/client/src/components/streams/StreamShow.js"],"names":["React","flv","connect","fetchStream","StreamShow","props","videoRef","createRef","id","match","params","player","stream","title","description","width","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;IAEMC,U;;;;;AAEF;AACA,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,oFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AAFc;AAIjB;;;;wCACkB;AAAA,UACPC,EADO,GACA,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MADjB,CACPF,EADO;AAEf,WAAKH,KAAL,CAAWF,WAAX,CAAuBK,EAAvB;AAGH;;;kCAEY;AAET,UAAG,KAAKG,MAAL,IAAe,CAAC,KAAKN,KAAL,CAAWO,MAA9B,EAAsC;AAClC;AACH;AACJ;;;6BACO;AACJ,UAAG,CAAC,KAAKP,KAAL,CAAWO,MAAf,EAAsB;AAClB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACH;;AAHG,+BAI0B,KAAKP,KAAL,CAAWO,MAJrC;AAAA,UAIGC,KAJH,sBAIGA,KAJH;AAAA,UAIWC,WAJX,sBAIWA,WAJX;AAKJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAG,KAAKR,QAAlB;AAA4B,QAAA,KAAK,EAAI;AAACS,UAAAA,KAAK,EAAE;AAAR,SAArC;AAAsD,QAAA,QAAQ,EAAG,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,KAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,WAAL,CAHJ,CADJ;AAOH;;;;EAjCoBd,KAAK,CAACgB,S;;AAoC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEP,IAAAA,MAAM,EAAEM,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACV,KAAT,CAAeC,MAAf,CAAsBF,EAApC;AAAV,GAAP;AAEH,CAHD;;AAKA,eAAeN,OAAO,CAACe,eAAD,EAAiB;AAAEd,EAAAA,WAAW,EAAXA;AAAF,CAAjB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n    \n    //implementing flv.js\n    constructor(props){\n        super(props);\n        this.videoRef = React.createRef();\n\n    }\n    componentDidMount(){\n        const { id } = this.props.match.params;\n        this.props.fetchStream(id);\n       \n\n    }\n    \n    buildPlayer(){\n\n        if(this.player || !this.props.stream) {\n            return ;\n        }\n    }\n    render(){\n        if(!this.props.stream){\n            return <div>Loading....</div>\n        }\n        const {title , description} = this.props.stream;\n        return (\n            <div>\n                <video ref ={this.videoRef} style = {{width :'100%'}} controls= {true}/>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream :state.streams[ownProps.match.params.id] }\n\n}\n\nexport default connect(mapStateToProps,{ fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}